App={init:async()=>{return await App.initWeb3Modal();},fetchSupply:async()=>{const web3=new Web3("https://bsc-dataseed.binance.org");const tokenABI=[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_decimals","type":"uint256"},{"internalType":"uint256","name":"_supply","type":"uint256"},{"internalType":"uint256","name":"_txFee","type":"uint256"},{"internalType":"uint256","name":"_burnFee","type":"uint256"},{"internalType":"uint256","name":"_liquiditypoolFee","type":"uint256"},{"internalType":"address","name":"_FeeAddress","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"Slippage","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Website","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BURN_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_LIQUIDITYPOOL_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_TAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tAmount","type":"uint256"}],"name":"deliver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"excludeAccount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"excludeAccountSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"includeAccount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"includeAccountSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isExcluded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isExcludedSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tAmount","type":"uint256"},{"internalType":"bool","name":"deductTransferFee","type":"bool"}],"name":"reflectionFromToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"setAsLiquidityPoolAccount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"rAmount","type":"uint256"}],"name":"tokenFromReflection","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalBurn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLiquidityPool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_txFee","type":"uint256"},{"internalType":"uint256","name":"_burnFee","type":"uint256"},{"internalType":"uint256","name":"_liquiditypoolFee","type":"uint256"}],"name":"updateFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"_wallet","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}];const contract=new web3.eth.Contract(tokenABI,'0x6dc3d0D6EC970BF5522611D8eFF127145D02b675')
const totalSupply=await contract.methods.totalSupply().call()
$.ajax({type:"POST",url:"/supply.php",dataType:'json',data:{totalSupply:(totalSupply/10**18)},complete:function(data){}})},initWeb3:async()=>{try{App.web3=new Web3('https://bsc-dataseed1.binance.org')}catch(error){alert("Enable to access to Metamask");console.log(error);}},initWeb3Modal:async()=>{try{const Web3Modal=window.Web3Modal.default;App.web3Modal=new Web3Modal({cacheProvider:true,providerOptions:App.getProviderOptions()})
App.provider=await App.web3Modal.connect();console.log('provider',App.provider);if(typeof App.provider!=='undefined'){App.web3=new Web3(App.provider);}}catch(error){console.log(error,"Enable to access to Metamask");}},getProviderOptions:()=>{const WalletConnectProvider=window.WalletConnectProvider.default;return{walletconnect:{package:WalletConnectProvider,options:{rpc:{56:"https://bsc-dataseed1.ninicoin.io",97:"https://data-seed-prebsc-1-s1.binance.org:8545",},bridge:"https://u.bridge.walletconnect.org",chainId:56,}}}},initContracts:async()=>{App.networkId=await App.web3.eth.net.getId();if(App.networkId!==56){alert("Please switch to Binance Smart Chain");return;}
const row=await App.getPresaleInfo(tokenInfo.presaleAddress);App.render(row);},connectWallet:async(btn)=>{await App.initWeb3Modal()
{const web3=App.web3;console.log('web3',web3);accounts=await web3.eth.getAccounts()
console.log('accounts',accounts);if(typeof accounts[0]!=='undefined'){App.connected(accounts)}else{if(btn){accounts=await ethereum.request({method:'eth_requestAccounts'});App.connected(accounts)}
const response={status:false,message:'Please login with MetaMask'};console.log(response.message);return response;}}},connected:async(accounts)=>{App.provider.on('accountsChanged',async function(accounts){console.log('account-account',accounts);if(accounts.length===0){$('.connect-web3').addClass('btn-grad').removeClass('btn-grad-o').html('Connect Wallet');$('.update-profile-btn').hide(0);$('input[name=csrf_token]').val('')}else{$('.connect-web3').addClass('btn-grad-o').removeClass('btn-grad').html('Connected');$('.update-profile-btn').show(0);$('input[name=csrf_token]').val(accounts[0])}})
if(accounts.length===0){$('.connect-web3').addClass('btn-grad').removeClass('btn-grad-o').html('Connect Wallet');$('.update-profile-btn').hide(0);$('input[name=csrf_token]').val('')}else{$('.connect-web3').addClass('btn-grad-o').removeClass('btn-grad').html('Connected');$('.update-profile-btn').show(0);$('input[name=csrf_token]').val(accounts[0])}},addToMetamask:async(btn)=>{if(typeof ethereum!=='undefined'){ethereum.request({method:'metamask_watchAsset',params:{"type":"ERC20","options":{"address":tokenInfo.address,"symbol":tokenInfo.symbol,"decimals":tokenInfo.decimals,"image":tokenInfo.image},},id:Math.round(Math.random()*100000)},(err,added)=>{console.log('provider returned',err,added)
if(err||'error'in added){alert("There was a problem adding the token.")
return false}})}else{const response={status:false,message:'Please install MetaMask'};console.log(response.message);return response;}},clipboard:(text)=>{navigator.clipboard.writeText(text);},toWei:(amount,decimals=18)=>{return new BigNumber(amount.toString()).multipliedBy(new BigNumber("10").pow(new BigNumber(decimals.toString())));},fromWei:(amount,decimals=18)=>{return new BigNumber(amount.toString()).div(new BigNumber("10").pow(new BigNumber(decimals.toString())));},};$(window).on("load",()=>{$('[data-toggle="tooltip"]').tooltip()
App.fetchSupply()
$(document).on('click','.connect-web3',function(){App.connectWallet(true);})
$(document).on('click','[data-clipboard=text]',function(e){const text=$(this).data().text;$(`#${$(this).attr('aria-describedby')} .tooltip-inner`).html('Copied!')
setTimeout(function(){$(this).attr('title','Copy').tooltip('update')},50000)
App.clipboard(text);})
$(document).on('click','.add-metamask',async function(){App.addToMetamask().then(res=>{if(!res.status){alert(res.message)}});})
$(document).on('submit','form.contact-form',function(e){e.preventDefault();let _form=$(this)
$.ajax({type:"POST",url:_form.attr('action'),dataType:'json',data:_form.serialize(),complete:function(data){var json=$.parseJSON(data.responseText);$('.contact-response').html(`<div class="alert alert-${json.result==='error'?'danger':json.result}" role="alert">${json.message}</div>`);_form.find('[type=reset]').click();}})})});function to_fixed(value){function fixed(num,len=2){if(num==0){return "0.00";}
if(!Number(num)){return "--";}
num=num*1;return num.toFixed(len).replace(/(\d)(?=(\d{3})+\.)/g,"$1,");}
value=value*1;if(value>1e9){return fixed(value/1e9)+" B";}
if(value>1e6){return fixed(value/1e6)+" M";}
if(value>1e3){return fixed(value/1e3)+" K";}
return fixed(value);}